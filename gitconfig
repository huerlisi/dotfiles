[user]
	name = Markus Koller
	email = markus-koller@gmx.ch

[core]
	eol = lf
	autocrlf = input
	excludesfile = ~/.gitexcludes

[branch]
	autosetuprebase = remote

[color]
	ui = auto

[advice]
	statusHints = false

[diff]
	renames = copies
	mnemonicprefix = true

[difftool]
	prompt = false

[merge]
	stat = true
	tool = gvimdiff

[mergetool]
	prompt = false
	keepBackup = false

[rebase]
	stat = true

[alias]
	h = help
	r = remote
	sub = submodule

	di = diff
	dc = diff --cached
	ds = diff --stat
	st = status
	stat = status

	ls = branch -av
	co = checkout
	sw = checkout
	nb = checkout -b
	un = reset HEAD
	unstage = reset HEAD

	all = add -A .
	ci = commit -v
	ca = commit -va
	amend = commit -v --amend

	l = log --graph --pretty=format:\"%C(yellow)[%h]%Creset %Cred%an:%Creset %C(cyan)%s%Creset (%ar)\"
	lstat = log --stat
	ldiff = log -p
	new = "!git l ORIG_HEAD.. | grep --color=never ."
	news = log -p ORIG_HEAD..

	up = pull -v --progress
	upbase = pull -v --progress --rebase
	upall = pull-all
	pu = push -v --progress
	ff = merge --ff-only HEAD@{u}
	mt = mergetool
	reup = remote update

	stl = stash list
	std = stash drop

	g = "!sh -c 'if [ \"`uname -s`\" = 'Darwin' ]; then (gitx &>/dev/null &); elif [ -n \"$DISPLAY\" ]; then (gitg &>/dev/null &); else tig; fi'"
	x = "!sh -c 'if [ \"`uname -s`\" = 'Darwin' ]; then (gitx -c &>/dev/null &); elif [ -n \"$DISPLAY\" ]; then (gitg -c &>/dev/null &); else git ci; fi'"
