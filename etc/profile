# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))
# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).

. /etc/environment

if [ "$BASH" ]; then
  if [ "$SSH_CLIENT" ] || [ "$SUDO_USER" ]; then
    export PS1='\u@\h:\w\$ '
  elif [ "`id -u`" -eq 0 ]; then
    export PS1='\h:\w\$ '
  else
    export PS1='\u@\h:\w$ '
  fi
else
  if [ "`id -u`" -eq 0 ]; then
    export PS1='# '
  else
    export PS1='$ '
  fi
fi

if [[ "$TERM" =~ "rxvt" ]]; then
  if [ "$SSH_CLIENT" ]; then
    export PROMPT_COMMAND='_pwd=${PWD/$HOME/\~}; echo -ne "]1;@$HOSTNAME:$_pwd\007]2;$USER@$HOSTNAME:$_pwd\007"'
  else
    export PROMPT_COMMAND='_pwd=${PWD/$HOME/\~}; echo -ne "]1;$_pwd\007]2;$USER@$HOSTNAME:$_pwd\007"'
  fi

  function command_title {
    case "$BASH_COMMAND" in
      *\033]0*|*]*) ;;
      *) 
        cmd=${BASH_COMMAND/$HOME/\~}
        echo -ne "]1;$cmd ($_pwd)\007]2;$cmd ($USER@$HOSTNAME:$_pwd)\007";;
    esac
  }
fi

shopt -s histappend checkwinsize

export HISTSIZE=5000
export HISTFILESIZE=5000
export HISTCONTROL="ignoreboth"

# ls
eval `dircolors -b`
export LS_COLORS="$LS_COLORS:ow=30;42:*.wmv=01;35:*.rm=01;35:*.ogm=01;35:*.mp4=01;35"
alias ls='ls --color'
alias ll='ls -lh'
alias l='ls -A'

# basic aliases
alias @='start'
alias ..='cd ..'
alias ...='cd ../..'
alias cd_='cd "$_"'
alias back='cd "$OLDPWD"'
alias cp='cp -v'
alias mv='mv -v'
alias rm='rm -v'
alias du='du -ch'
alias df='df -h'
alias ln='ln -svfi'
alias rgrep='rgrep --exclude-dir=.svn'
alias cgrep='GREP_OPTIONS= grep'
alias mime='file -i'
alias killbg='kill -9 %1'

# debian aliases
alias pkget='aptitude -Z install'
alias pkgpurge='aptitude -Z purge'
alias pkgremove='aptitude -Z remove'
alias pkginstall='sudo dpkg -i'
alias pkglist='dpkg -L'
alias pkgname='apt-cache pkgnames'
alias pkgsearch='apt-cache search'
function pkgwhich {
  dpkg -S `which "$1"`
}

# sudo aliases
alias sucp='sudo cp -vi'
alias sumv='sudo mv -vi'
alias surm='sudo rm -v'
alias suln='sudo ln -svfi'
alias sush='sudo -i'
alias suown='sudo chown -vR 0:0'
alias sumod='sudo chmod -vR 644'
alias suvi='sudo vim'
alias sugvi='sudo vim'
alias sudiff='sudo vimdiff'
alias sugdiff='sudo gvimdiff'
alias init='sudo init'
alias modprobe='sudo modprobe'
alias rmmod='sudo rmmod'
alias apt-get='sudo apt-get'
alias aptitude='sudo aptitude'
alias dpkg-reconfigure='sudo dpkg-reconfigure'
alias invoke-rc.d='sudo invoke-rc.d'
alias update-rc.d='sudo update-rc.d'
alias update-alternatives='sudo update-alternatives'
alias visudo='sudo visudo'
alias make-kpkg='sudo make-kpkg'
alias iptables='sudo iptables'
alias ip6tables='sudo ip6tables'
alias tcpdump='sudo tcpdump'
alias ethtool='sudo ethtool'
alias gem='sudo gem'
alias lsop='sudo lsof -ni | grep --color=never LISTEN | egrep --color=auto "^[^ ]+"'
alias jnettop='sudo jnettop'
alias ifconfig='sudo ifconfig'
alias ifup='sudo ifup'
alias ifdown='sudo ifdown'
alias tcpkill='sudo tcpkill'

# program aliases
alias fortune='fortune -a'
alias tetris='tetris-bsd -p -l 5'
alias thesaurus='dict -d moby-thes'
alias pstree='pstree -GUh'
alias ftrace='strace -fe trace=file'
alias ptrace='strace -fe trace=process'
alias fetchmail='fetchmail -v'
alias wget='wget -c'
alias gvi='gvim'
alias gvi.add='gvim --remote-silent'
alias mysql='mysql -u root'
alias ruby='ruby -w'
alias open='xdg-open'
alias gcc='gcc -Wall'
alias vi.svndiff='svn diff --diff-cmd ~/.subversion/diff'
alias vi.xdebug='gvim -c "source ~/.vim/xdebug/debugger.vim"'
alias sbcl='rlwrap sbcl'
alias ocaml='rlwrap ocaml'
alias ruby='ruby -w'
alias gcc='gcc -Wall'
alias ack='ack-grep'
alias cadaver='EDITOR="gvim -f" cadaver'
alias archive.sync='archive.checkout; archive.commit'
alias psgrep='pgrep -fl'

function down {
  local i
  for i in `seq 1 $(tput lines)`; do
    echo
  done
}

function .home {
  cd; down
  fortune
  echo; echo
  date "+%A, %e. %B %Y  %k:%M"
  echo; ls; echo
}

function mount.loop {
  mount="/mnt/loop"
  [ -n "$2" ] && mount="$2"

  if [ ! -n "$1" ]; then
    echo "Usage: mount.loop IMAGE [MOUNTPOINT]"
    return 255
  elif [ ! -f "$1" ]; then
    echo "Image $1 not found."
    return 1
  elif mountpoint -q "$mount"; then
    echo "$mount is already mounted."
    return 1
  else
    sudo mount -v -o loop "$1" "$mount" | tail -1
  fi
}


umask 022
