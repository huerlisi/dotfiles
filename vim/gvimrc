if !has('gui_running')
  finish
endif

" General Settings
" {{{

  set nomousehide

  " disable bash prompt
  let $PROMPT_COMMAND=""

  " selection behaviour
  set selectmode=key
  set selection=inclusive
  set keymodel=startsel
  set mousemodel=extend

" }}}

" Display Settings
" {{{

  set guioptions=aigrL

  if !exists('g:gui_loaded')
    let g:gui_loaded = 1

    set lines=50
    if &diff
      set lines=60
      set columns=200
    else
      set columns=120
    end

    " font
    if has('unix')
      set guifont=Monospace\ 9
    else
      set guifont=DejaVu_Sans_Mono:h9:cANSI
    endif
  endif

  " tab bar
  hi TabLine guifg=LightGray guibg=#606060
  hi TabLineSel gui=bold guifg=White guibg=#808080
  hi TabLineFill gui=underline guifg=LightGray guibg=grey20 guibg=#505050

" }}}

" Keybindings
" {{{

  " ,M - toggle font size
  function! ToggleFontSize()
    if exists('g:toggle_font_size')
      unlet g:toggle_font_size
      set guifont=Monospace\ 9 lines=50 columns=120
    else
      let g:toggle_font_size = 1
      set guifont=Monospace\ 15 lines=40 columns=110
      winpos 290 100
    endif
    wincmd =
  endfunction

  noremap <silent> <leader>M :call ToggleFontSize()<CR>
  noremap <silent> <C-PageUp> :call ToggleFontSize()<CR>
  noremap <silent> <C-PageDown> :call ToggleFontSize()<CR>

  " cursor movements with Alt key in insert mode and console
  set winaltkeys=no
  inoremap <M-h> <C-o>h
  inoremap <M-j> <C-o>j
  inoremap <M-k> <C-o>k
  inoremap <M-l> <C-o>l

  cnoremap <M-h> <Left>
  cnoremap <M-l> <Right>
  cnoremap <M-j> <Down>
  cnoremap <M-k> <Up>

  inoremap <M-f> <C-o>e<Right>
  inoremap <M-b> <C-o>b
  inoremap <M-F> <C-o>E<Right>
  inoremap <M-B> <C-o>B

  cnoremap <M-f> <C-Right>
  cnoremap <M-b> <C-Left>

  " Copy & Paste shortcuts
  " set the 'cpoptions' to its Vim default
  if 1    " only do this when compiled with expression evaluation
    let s:save_cpo = &cpoptions
  endif
  set cpo&vim

  " CTRL-X is Cut
  vnoremap <C-X> "+x
  " CTRL-C is Copy
  vnoremap <C-C> "+y
  " CTRL-V is Paste
  map <C-V>               "+gP
  "cmap <C-V>              <C-R>+

  " Pasting blockwise and linewise selections is not possible in Insert and
  " Visual mode without the +virtualedit feature.  They are pasted as if they
  " were characterwise instead.
  " Uses the paste.vim autoload script.

  exe 'inoremap <script> <C-V>' paste#paste_cmd['i']
  exe 'vnoremap <script> <C-V>' paste#paste_cmd['v']

  " Use <C-Q> to do what CTRL-V used to do
  noremap <C-Q> <C-V>
  inoremap <C-Q> <C-V>
  cnoremap <C-Q> <C-V>

  " For CTRL-V to work autoselect must be off.
  " On Unix we have two selections, autoselect can be used.
  if !has('unix')
    set guioptions-=a
  endif

  " CTRL-A is Visual-select all
  noremap <C-A> ggVG
  vnoremap <C-A> <C-C>ggVG

  " restore 'cpoptions'
  set cpo&
  if 1
    let &cpoptions = s:save_cpo
    unlet s:save_cpo
  endif

" }}}
