#!/bin/bash

dir=`echo "$PWD" | sed -r "s|^$HOME|~|"`
unset files complete choice

if [ "$1" = "--complete" ]; then
  complete=1
  shift
fi

# colors
RESET=`echo -ne '\e[0m'`
WHITE=`echo -ne '\e[1;37m'`
RED=`echo -ne '\e[1;31m'`
GREEN=`echo -ne '\e[1;32m'`
YELLOW=`echo -ne '\e[1;33m'`
CYAN=`echo -ne '\e[1;36m'`

if [[ "$1" =~ ^[0-9]+$ ]]; then
  # use the number as the selected choice
  choice="$1"
  shift
fi

if [ $# -gt 0 ]; then
  # search for files matching the passed pattern
  pattern=`echo "$1" | sed -r 's|\.|.*|g' | sed -r 's|/|.*/|g'`

  if [[ "$pattern" =~ \#[0-9]+$ ]]; then
    choice=`echo "$pattern"  | sed -r 's/.*#([0-9]+)$/\1/'`
    pattern=`echo "$pattern" | sed -r 's/#[0-9]+$//'`
  fi

  files=`ag -l --ignore db/archive . | egrep "$pattern" | sort`
  display_files=`echo "$files" | sed -r "s|($pattern)|$RED\1$RESET|g"`
  count=`echo "$files" | grep -c .`

  if [ -n "$files" ]; then
    result=" $GREEN>$WHITE Found $YELLOW$count$WHITE matches in $CYAN[$dir]$RESET"
    #result="$CYAN[$dir] $YELLOW$count$WHITE matches"
  else
    result=" $RED>$RESET No matches for $GREEN\"$1\"$RESET in $CYAN[$dir]$RESET"
  fi
else
  # look for changed files
  display_files=`git -c color.ui=always status -s`
  files=`echo "$display_files" | awk '{ print $2 }'`
  count=`echo "$files" | grep -c .`

  if [ -z "$files" ]; then
    result=" $RED>$WHITE No changes in $CYAN[$dir]$RESET"
  else
    result=" $GREEN>$WHITE Found $YELLOW$count$WHITE changed files in $CYAN[$dir]$RESET"
  fi
fi

if [ -n "$choice" ]; then
  count=1
  files=`echo "$files" | head -n "$choice" | tail -1`
  display_files=`echo "$display_files" | head -n "$choice" | tail -1`
fi

if [ -z "$complete" ]; then
  if [ $count -eq 0 ]; then
    echo -e "$result"
  elif [ $count -eq 1 ]; then
    echo -e " $GREEN>$RESET Editing $WHITE$files$RESET"
    sensible-editor "$files"
  else
    read -p " $CYAN>$WHITE Edit $YELLOW$count$WHITE files?$RESET [Y/n] "
    [ "$REPLY" = "n" -o "$REPLY" = "N" ] && exit
    sensible-editor $files
  fi
else
  exec 1>&2

  columns=`tput cols`
  lines=`tput lines`
  limit=$((lines - 5))
  [ $count -lt $limit ] && limit=$count

  # trim results to number of lines
  if [ $# -gt 0 -a $count -gt $limit ]; then
    display_files=`echo -e "$display_files" | head -n $limit`
  fi

  # trim lines to number of columns
  display_files=`echo -e "$display_files" | sed -r -e "s/$/$RESET/" -e "s/^(.{$((columns-8))}).{8,}$/\1.../"`

  echo -e "\n\n$result"
  if [ $count -gt 0 ]; then
    echo "$display_files" | nl -s ' ' | sed -r "s/^\s{$((2 - ${#limit}))}(\s*)([0-9]*)/\1$YELLOW[\2]$RESET/"
  fi

  if [ $count -gt $limit ]; then
    echo "      ($((count - limit)) more...)"
  fi

  echo -ne " $GREEN>>>$RESET "
  if [ $# -eq 0 ]; then
    echo -n "$choice"
  else
    echo -n "$1"
  fi
fi
